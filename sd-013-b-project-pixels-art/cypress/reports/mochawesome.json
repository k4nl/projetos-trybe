{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 29,
    "pending": 0,
    "failures": 12,
    "start": "2021-06-13T17:59:45.523Z",
    "end": "2021-06-13T18:01:13.639Z",
    "duration": 88116,
    "testsRegistered": 41,
    "passPercent": 70.73170731707317,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "17eb03ff-3f91-4c11-9833-4e742126365b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "03bcd86d-7879-431d-bfb9-470dd63d2a20",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f09abae6-940e-4174-9755-f3d6d16b5f40",
              "parentUUID": "03bcd86d-7879-431d-bfb9-470dd63d2a20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f09abae6-940e-4174-9755-f3d6d16b5f40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 623,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');",
              "err": {},
              "uuid": "e0d8b3a0-8862-4ef0-b74c-139cd89f1c36",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "5aa4edd3-d4af-42d7-a5d6-a1bdd4d6aebc",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "11edd5c2-7a52-45fd-8bfb-8fcd2a3821c4",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 198,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "b0db122b-51ba-42ab-912f-58d3d62b80d8",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "72d5595f-178e-4b5d-a173-f4daf410d435",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "56dc8101-e8bc-4515-a1c3-173fd6c3f0f9",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7cdf264a-c3f1-46e3-bc73-774382c223d0",
              "parentUUID": "5f1fb827-5a45-4ee1-8576-72330387f3ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0d8b3a0-8862-4ef0-b74c-139cd89f1c36",
            "5aa4edd3-d4af-42d7-a5d6-a1bdd4d6aebc",
            "11edd5c2-7a52-45fd-8bfb-8fcd2a3821c4",
            "b0db122b-51ba-42ab-912f-58d3d62b80d8",
            "72d5595f-178e-4b5d-a173-f4daf410d435",
            "56dc8101-e8bc-4515-a1c3-173fd6c3f0f9",
            "7cdf264a-c3f1-46e3-bc73-774382c223d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1ea3b5a7-4ca4-4c28-b335-603538b3a71e",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "89871ec2-060f-4650-a3c1-caecf0aa9b00",
              "parentUUID": "1ea3b5a7-4ca4-4c28-b335-603538b3a71e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 328,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "e3819b73-de65-44ff-8a5c-399caea02eb2",
              "parentUUID": "1ea3b5a7-4ca4-4c28-b335-603538b3a71e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89871ec2-060f-4650-a3c1-caecf0aa9b00",
            "e3819b73-de65-44ff-8a5c-399caea02eb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 552,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "709280e3-7939-4517-82e6-58e93da29df6",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "83898db4-eb88-45b2-9860-c4ced2534af4",
              "parentUUID": "709280e3-7939-4517-82e6-58e93da29df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "88d7f8f2-f1ee-4f13-8e6f-18ec2172835e",
              "parentUUID": "709280e3-7939-4517-82e6-58e93da29df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "191136c6-fca2-4301-96b3-803a94b65f6c",
              "parentUUID": "709280e3-7939-4517-82e6-58e93da29df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "bde1dd77-e20d-4f32-8772-dcf8a7c5093d",
              "parentUUID": "709280e3-7939-4517-82e6-58e93da29df6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83898db4-eb88-45b2-9860-c4ced2534af4",
            "88d7f8f2-f1ee-4f13-8e6f-18ec2172835e",
            "191136c6-fca2-4301-96b3-803a94b65f6c",
            "bde1dd77-e20d-4f32-8772-dcf8a7c5093d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "63ffcd71-ccab-4363-a4f7-7afe096a0949",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ccdd98b6-9ff2-488d-858f-e8c0dc235e99",
              "parentUUID": "63ffcd71-ccab-4363-a4f7-7afe096a0949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 534,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "9e57fab0-b6d5-4bf0-a388-70c27a1314bc",
              "parentUUID": "63ffcd71-ccab-4363-a4f7-7afe096a0949",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccdd98b6-9ff2-488d-858f-e8c0dc235e99",
            "9e57fab0-b6d5-4bf0-a388-70c27a1314bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8a23747-7c6b-4eb6-b0a9-b3151cdc10be",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "bb3dccc3-90a8-4e4d-9c3b-815ded5a72fb",
              "parentUUID": "c8a23747-7c6b-4eb6-b0a9-b3151cdc10be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "46051c25-02c3-4b8d-a535-32f3c1927eab",
              "parentUUID": "c8a23747-7c6b-4eb6-b0a9-b3151cdc10be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb3dccc3-90a8-4e4d-9c3b-815ded5a72fb",
            "46051c25-02c3-4b8d-a535-32f3c1927eab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 338,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3b0d082-362c-4551-be1e-61f78413fb58",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 574,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "f46a4225-79f0-44b2-815e-b8246008bd6f",
              "parentUUID": "b3b0d082-362c-4551-be1e-61f78413fb58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "7404e09b-5ccc-4b3f-8ee7-567716725376",
              "parentUUID": "b3b0d082-362c-4551-be1e-61f78413fb58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f46a4225-79f0-44b2-815e-b8246008bd6f",
            "7404e09b-5ccc-4b3f-8ee7-567716725376"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9308,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4294657-0465-49df-87dd-b24252eb52de",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "258ce2cf-2838-4f39-bc14-24b1bf3f303a",
              "parentUUID": "f4294657-0465-49df-87dd-b24252eb52de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8918,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "4a010dbc-a5ac-4157-ba24-3bfa674b29b7",
              "parentUUID": "f4294657-0465-49df-87dd-b24252eb52de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2266,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "c553d2d8-da47-41de-af0a-24f9270096d2",
              "parentUUID": "f4294657-0465-49df-87dd-b24252eb52de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "258ce2cf-2838-4f39-bc14-24b1bf3f303a",
            "4a010dbc-a5ac-4157-ba24-3bfa674b29b7",
            "c553d2d8-da47-41de-af0a-24f9270096d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13586,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0e554120-aaac-4126-96b1-7a92eaf0b44d",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "1150b5d8-cc51-4118-aef6-1e0da2a1b30a",
              "parentUUID": "0e554120-aaac-4126-96b1-7a92eaf0b44d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5f925f7f-ece9-4a27-ab29-0758e1c8ba54",
              "parentUUID": "0e554120-aaac-4126-96b1-7a92eaf0b44d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "b31dcdf5-7729-4716-9831-1cde5ac2b016",
              "parentUUID": "0e554120-aaac-4126-96b1-7a92eaf0b44d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "56d4ac90-ed45-48a7-a05b-50495053d9f0",
              "parentUUID": "0e554120-aaac-4126-96b1-7a92eaf0b44d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1150b5d8-cc51-4118-aef6-1e0da2a1b30a",
            "5f925f7f-ece9-4a27-ab29-0758e1c8ba54",
            "b31dcdf5-7729-4716-9831-1cde5ac2b016",
            "56d4ac90-ed45-48a7-a05b-50495053d9f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3f0427f-2447-4a32-a6fb-db21e8495975",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4617,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b11a093a-aba0-4c35-84c0-bf6895cad93a",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8a88634b-4f96-407e-941f-f7aa0971cb23",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4401,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d93b992e-c002-40df-a91f-d6b2960f76d7",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4347,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2901ffa4-815d-4d38-82ae-e4d2c1c41d61",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4457,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a4850558-801b-4484-ac95-c3514019dacc",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4fd778e7-15d0-4f5d-bde7-17251e2e9d13",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4352,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2810bd4f-786d-480b-b09d-e85778a88cf0",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4383,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "407d29de-db8d-4044-b64f-633395886f6b",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4475,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f824e2b4-5804-4aa4-a920-549c9b160212",
              "parentUUID": "e3f0427f-2447-4a32-a6fb-db21e8495975",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b11a093a-aba0-4c35-84c0-bf6895cad93a",
            "8a88634b-4f96-407e-941f-f7aa0971cb23",
            "d93b992e-c002-40df-a91f-d6b2960f76d7",
            "2901ffa4-815d-4d38-82ae-e4d2c1c41d61",
            "a4850558-801b-4484-ac95-c3514019dacc",
            "4fd778e7-15d0-4f5d-bde7-17251e2e9d13",
            "2810bd4f-786d-480b-b09d-e85778a88cf0",
            "407d29de-db8d-4044-b64f-633395886f6b",
            "f824e2b4-5804-4aa4-a920-549c9b160212"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39784,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "805752a6-7d55-4902-8eb5-4b9c0479ef3f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4434,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a52f3764-54b3-47e5-abf2-baa1879b2c6f",
              "parentUUID": "805752a6-7d55-4902-8eb5-4b9c0479ef3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4488,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "573f2f23-f67d-4be2-bbd1-e08ea181da74",
              "parentUUID": "805752a6-7d55-4902-8eb5-4b9c0479ef3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4343,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42387/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42387/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42387/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42387/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42387/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42387/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42387/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42387/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42387/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42387/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42387/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0dbe6336-3c99-4141-ba84-cfa1025d2cc0",
              "parentUUID": "805752a6-7d55-4902-8eb5-4b9c0479ef3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a52f3764-54b3-47e5-abf2-baa1879b2c6f",
            "573f2f23-f67d-4be2-bbd1-e08ea181da74",
            "0dbe6336-3c99-4141-ba84-cfa1025d2cc0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f7fc938-ebd2-4059-b0eb-ac95bf0fd811",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 949,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "83525110-9a7b-42fb-b6b3-04e0fc458069",
              "parentUUID": "3f7fc938-ebd2-4059-b0eb-ac95bf0fd811",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "7922e0f4-771c-4f87-8fbe-215902db7e3c",
              "parentUUID": "3f7fc938-ebd2-4059-b0eb-ac95bf0fd811",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83525110-9a7b-42fb-b6b3-04e0fc458069",
            "7922e0f4-771c-4f87-8fbe-215902db7e3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}